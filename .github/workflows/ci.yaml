name: CI Workflow

on:
  push:
    branches: ['main']
    tags:
      - 'v*'
    paths-ignore:
      - 'docs/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: write
  id-token: write
  packages: write
  pull-requests: write

jobs:
  golang-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Go Linter
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.58.2
          args: --timeout=5m

      - name: Run Go tests
        run: go test ./...

  build-cartesi-machine:
    needs: golang-tests
    runs-on: ubuntu-latest
    env:
      MACHINE_IMAGE_NAME: devolt-machine
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        id: setup_buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Extract metadata from Git refs and GitHub events
        id: extract_metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{github.repository_owner}}/${{env.MACHINE_IMAGE_NAME}}
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build machine image and push it to GitHub Container Registry
        uses: docker/build-push-action@v6
        with:
          context: .
          file: build/Dockerfile.dapp
          push: true
          tags: ${{ steps.extract_metadata.outputs.tags }}
          labels: ${{ steps.extract_metadata.lables.labels }}
          cache-from: type=gha,scope=ubuntu
          cache-to: type=gha,mode=max,scope=ubuntu
