// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package dependency_injection

import (
	"github.com/devolthq/devolt/configs"
	"github.com/devolthq/devolt/internal/domain/entity"
	"github.com/devolthq/devolt/internal/infra/cartesi/handler/advance_handler"
	"github.com/devolthq/devolt/internal/infra/cartesi/handler/inspect_handler"
	"github.com/devolthq/devolt/internal/infra/cartesi/middleware"
	"github.com/devolthq/devolt/internal/infra/repository/sqlite"
	"github.com/google/wire"
)

// Injectors from wire.go:

func NewMiddlewares() (*Middlewares, error) {
	db, err := configs.SetupSQlite()
	if err != nil {
		return nil, err
	}
	userRepositorySqlite := sqlite.NewUserRepositorySqlite(db)
	rbacMiddleware := middleware.NewRBACMiddleware(userRepositorySqlite)
	middlewares := &Middlewares{
		RBAC: rbacMiddleware,
	}
	return middlewares, nil
}

func NewAdvanceHandlers() (*AdvanceHandlers, error) {
	db, err := configs.SetupSQlite()
	if err != nil {
		return nil, err
	}
	bidRepositorySqlite := sqlite.NewBidRepositorySqlite(db)
	userRepositorySqlite := sqlite.NewUserRepositorySqlite(db)
	contractRepositorySqlite := sqlite.NewContractRepositorySqlite(db)
	auctionRepositorySqlite := sqlite.NewAuctionRepositorySqlite(db)
	bidAdvanceHandlers := advance_handler.NewBidAdvanceHandlers(bidRepositorySqlite, userRepositorySqlite, contractRepositorySqlite, auctionRepositorySqlite)
	userAdvanceHandlers := advance_handler.NewUserAdvanceHandlers(userRepositorySqlite, contractRepositorySqlite)
	orderRepositorySqlite := sqlite.NewOrderRepositorySqlite(db)
	stationRepositorySqlite := sqlite.NewStationRepositorySqlite(db)
	orderAdvanceHandlers := advance_handler.NewOrderAdvanceHandlers(orderRepositorySqlite, stationRepositorySqlite, contractRepositorySqlite)
	stationAdvanceHandlers := advance_handler.NewStationAdvanceHandlers(stationRepositorySqlite, contractRepositorySqlite)
	auctionAdvanceHandlers := advance_handler.NewAuctionAdvanceHandlers(bidRepositorySqlite, userRepositorySqlite, auctionRepositorySqlite, contractRepositorySqlite)
	contractAdvanceHandlers := advance_handler.NewContractAdvanceHandlers(contractRepositorySqlite)
	advanceHandlers := &AdvanceHandlers{
		BidAdvanceHandlers:      bidAdvanceHandlers,
		UserAdvanceHandlers:     userAdvanceHandlers,
		OrderAdvanceHandlers:    orderAdvanceHandlers,
		StationAdvanceHandlers:  stationAdvanceHandlers,
		AuctionAdvanceHandlers:  auctionAdvanceHandlers,
		ContractAdvanceHandlers: contractAdvanceHandlers,
	}
	return advanceHandlers, nil
}

func NewInspectHandlers() (*InspectHandlers, error) {
	db, err := configs.SetupSQlite()
	if err != nil {
		return nil, err
	}
	bidRepositorySqlite := sqlite.NewBidRepositorySqlite(db)
	bidInspectHandlers := inspect_handler.NewBidInspectHandlers(bidRepositorySqlite)
	userRepositorySqlite := sqlite.NewUserRepositorySqlite(db)
	contractRepositorySqlite := sqlite.NewContractRepositorySqlite(db)
	userInspectHandlers := inspect_handler.NewUserInspectHandlers(userRepositorySqlite, contractRepositorySqlite)
	orderRepositorySqlite := sqlite.NewOrderRepositorySqlite(db)
	orderInspectHandlers := inspect_handler.NewOrderInspectHandlers(orderRepositorySqlite)
	stationRepositorySqlite := sqlite.NewStationRepositorySqlite(db)
	stationInspectHandlers := inspect_handler.NewStationInspectHandlers(stationRepositorySqlite)
	auctionRepositorySqlite := sqlite.NewAuctionRepositorySqlite(db)
	auctionInspectHandlers := inspect_handler.NewAuctionInspectHandlers(auctionRepositorySqlite)
	contractInspectHandlers := inspect_handler.NewContractInspectHandlers(contractRepositorySqlite)
	inspectHandlers := &InspectHandlers{
		BidInspectHandlers:      bidInspectHandlers,
		UserInspectHandlers:     userInspectHandlers,
		OrderInspectHandlers:    orderInspectHandlers,
		StationInspectHandlers:  stationInspectHandlers,
		AuctionInspectHandlers:  auctionInspectHandlers,
		ContractInspectHandlers: contractInspectHandlers,
	}
	return inspectHandlers, nil
}

// wire.go:

var setBidRepositoryDependency = wire.NewSet(sqlite.NewBidRepositorySqlite, wire.Bind(new(entity.BidRepository), new(*sqlite.BidRepositorySqlite)))

var setAuctionRepositoryDependency = wire.NewSet(sqlite.NewAuctionRepositorySqlite, wire.Bind(new(entity.AuctionRepository), new(*sqlite.AuctionRepositorySqlite)))

var setOrderRepositoryDependency = wire.NewSet(sqlite.NewOrderRepositorySqlite, wire.Bind(new(entity.OrderRepository), new(*sqlite.OrderRepositorySqlite)))

var setStationRepositoryDependency = wire.NewSet(sqlite.NewStationRepositorySqlite, wire.Bind(new(entity.StationRepository), new(*sqlite.StationRepositorySqlite)))

var setContractRepositoryDependency = wire.NewSet(sqlite.NewContractRepositorySqlite, wire.Bind(new(entity.ContractRepository), new(*sqlite.ContractRepositorySqlite)))

var setUserRepositoryDependency = wire.NewSet(sqlite.NewUserRepositorySqlite, wire.Bind(new(entity.UserRepository), new(*sqlite.UserRepositorySqlite)))

var setAdvanceHandlers = wire.NewSet(advance_handler.NewOrderAdvanceHandlers, advance_handler.NewStationAdvanceHandlers, advance_handler.NewContractAdvanceHandlers, advance_handler.NewUserAdvanceHandlers, advance_handler.NewAuctionAdvanceHandlers, advance_handler.NewBidAdvanceHandlers)

var setInspectHandlers = wire.NewSet(inspect_handler.NewBidInspectHandlers, inspect_handler.NewUserInspectHandlers, inspect_handler.NewOrderInspectHandlers, inspect_handler.NewStationInspectHandlers, inspect_handler.NewAuctionInspectHandlers, inspect_handler.NewContractInspectHandlers)

var setMiddleware = wire.NewSet(middleware.NewRBACMiddleware)

type Middlewares struct {
	RBAC *middleware.RBACMiddleware
}

type AdvanceHandlers struct {
	BidAdvanceHandlers      *advance_handler.BidAdvanceHandlers
	UserAdvanceHandlers     *advance_handler.UserAdvanceHandlers
	OrderAdvanceHandlers    *advance_handler.OrderAdvanceHandlers
	StationAdvanceHandlers  *advance_handler.StationAdvanceHandlers
	AuctionAdvanceHandlers  *advance_handler.AuctionAdvanceHandlers
	ContractAdvanceHandlers *advance_handler.ContractAdvanceHandlers
}

type InspectHandlers struct {
	BidInspectHandlers      *inspect_handler.BidInspectHandlers
	UserInspectHandlers     *inspect_handler.UserInspectHandlers
	OrderInspectHandlers    *inspect_handler.OrderInspectHandlers
	StationInspectHandlers  *inspect_handler.StationInspectHandlers
	AuctionInspectHandlers  *inspect_handler.AuctionInspectHandlers
	ContractInspectHandlers *inspect_handler.ContractInspectHandlers
}
